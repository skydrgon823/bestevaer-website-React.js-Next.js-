@use "sass:math";

@mixin cover-parent {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

@mixin aspect-ratio($x, $y) {
    position: relative;
    display: block;

    &::before {
        content: '';
        display: block;
        padding-bottom: math.div($x, $y) * 100%;
    }
}

@mixin max-container {
    width: pct($grid-max-width, $screen-width);
    max-width: rem($grid-max-width);
    margin-right: auto;
    margin-left: auto;
}

@mixin underline($height: 1px, $distance: 0) {
    position: relative;
    overflow: hidden;
    text-decoration: none;

    &::after,
    &::before {
        content: '';
        position: absolute;
        bottom: $distance;
        left: 0;
        width: 100%;
        height: $height;
        background-color: currentColor;
        transition: transform 0.4s $easeInFastOutSlow;
    }

    &::before {
        transform-origin: left;
        transform: scaleX(0);
    }

    &::after {
        transform-origin: right;
        transition-delay: 0.2s;
    }

    &:hover {
        &::before {
            transform: scaleX(1);
            transition-delay: 0.2s;
        }

        &::after {
            transform: scaleX(0);
            transition-delay: 0s;
        }
    }
}

@mixin mq-regular {
    @media (min-width: $vw-regular) {
        @content;
    }
}

@mixin mq-wide {
    @media (min-width: $vw-wide) {
        @content;
    }
}

@mixin mq-extra-wide {
    @media (min-width: $vw-extra-wide) {
        @content;
    }
}

@mixin mq-fine {
    @media (hover: hover) and (pointer: fine) {
        @content;
    }
}

@function strip-unit($value) {
    @return math.div($value, $value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
    font-size: calc(#{rem($min-font-size)} + #{$max-font-size - $min-font-size} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
}